openapi: 3.0.3
info:
  title: 家具マッチングサービス
  description: 画像によるレコメンド機能を添えて
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
tags:
  - name: OK
    description: Check API status
  - name: User
    description: ユーザーアカウント管理
  - name: Furniture
    description: 家具管理
  - name: Trade
    description: 取引機能
  - name: Favorite
    description: いいね機能

paths:
  /ok:
    get:
      tags:
        - OK
      summary: Check API status
      responses:
        '200':
          description: API is running
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
  /sign_up:
    post:
      tags:
        - User
      summary: sign up
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        '200':
          description: User registered successfully
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /login:
    post:
      tags:
        - User
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /logout:
    post:
      tags:
        - User
      summary: User logout
      responses:
        '200':
          description: User logged out successfully
  /furniture:
    post:
      tags:
        - Furniture
      summary: Register new furniture
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterFurnitureRequest'
      responses:
        '200':
          description: Furniture registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureResponse'
    get:
      tags:
        - Furniture
      summary: Get list of furniture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FurnitureListRequest'
      responses:
        '200':
          description: Furniture list retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureListResponse'
  /furniture/{furniture_id}:
    get:
      tags:
        - Furniture
      summary: Get furniture details
      parameters:
        - name: furniture_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FurnitureRequest'
      responses:
        '200':
          description: Furniture details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureResponse'
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Furniture
      summary: Delete furniture
      parameters:
        - name: furniture_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Furniture deleted successfully
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /furniture/describe:
    post:
      tags:
        - Furniture
      summary: Generate furniture description
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FurnitureDescribeRequest'
      responses:
        '200':
          description: Furniture described successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureDescribeResponse'
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /furniture/recommend:
    post:
      tags:
        - Furniture
      summary: Recommend furniture
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FurnitureRecommendRequest'
      responses:
        '200':
          description: Furniture recommended successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureListResponse'
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /trades:
    post:
      tags:
        - Trade
      summary: Request a trade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTradeRequest'
      responses:
        '200':
          description: Trade requested successfully
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Trade
      summary: Get list of trades history
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Trade list retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeListResponse'
  /trades/{trade_id}:
    get:
      tags:
        - Trade
      summary: Get trade details
      parameters:
        - name: trade_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Trade details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeResponse'
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Trade
      summary: Update approval status
      parameters:
        - name: trade_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApprovalRequest'
      responses:
        '200':
          description: Trade status updated successfully
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /trades/{trade_id}/isChecked:
    put:
      tags:
        - Trade
      summary: Update isChecked status
      parameters:
        - name: trade_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIsCheckedRequest'
      responses:
        '200':
          description: Trade status updated successfully
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /favorite:
    post:
      tags:
        - Favorite
      summary: Add favorite
      parameters:
        - name: furniture_id
          in: query
          required: true
          schema:
            type: integer
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Favorite added successfully
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Favorite
      summary: Delete favorite
      parameters:
        - name: furniture_id
          in: query
          required: true
          schema:
            type: integer
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Favorite deleted successfully
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /favorite/{furniture_id}/:
    get:
      tags:
        - Favorite
      summary: Get favorite status
      parameters:
        - name: furniture_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Favorite status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteResponse'
        '400':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    OKResponse:
      type: object
      properties:
        msg:
          type: string
    ErrorResponse:
      type: object
      properties:
        msg:
          type: string
    SignUpRequest:
      type: object
      required:
        - username
        - password
        - area
      properties:
        username:
          type: string
        password:
          type: string
        area:
          type: integer
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        user_id:
          type: integer
    RegisterFurnitureRequest:
      type: object
      required:
        - user_id
        - product_name
        - image
        - description
        - height
        - width
        - depth
        - category
        - color
        - trade_place
        - condition
      properties:
        user_id:
          type: integer
        product_name:
          type: string
        image:
          type: string
          format: binary
        description:
          type: string
        height:
          type: number
        width:
          type: number
        depth:
          type: number
        category:
          type: integer
        color:
          type: integer
          description: 色コード, URL(https://github.com/naka-c1024/Hack_U_Team1/blob/main/client/app/lib/constants.dart)
        start_date:
          type: string
          format: date
        end_date: 
          type: string
          format: date
        trade_place:
          type: string
        condition:
          type: integer
    FurnitureRequest:
      type: object
      required:
        - user_id
      properties:
        user_id:
          type: integer
    FurnitureListRequest:
      type: object
      required:
        - user_id
      properties:
        user_id:
          type: integer
        keyword:
          type: string
          description: 検索キーワード, スペース区切りで複数指定可
    FurnitureListResponse:
      type: object
      properties:
        furniture:
          type: array
          items:
            $ref: '#/components/schemas/FurnitureResponse'
    FurnitureResponse:
      type: object
      properties:
        furniture_id:
          type: integer
        image:
          type: string
          format: binary
        area:
          type: integer
          description: 都道府県コード, URL(https://github.com/naka-c1024/Hack_U_Team1/blob/main/client/app/lib/constants.dart)
        username:
          type: string
          format: binary
        product_name:
          type: string
        description:
          type: string
        size:
          type: string
          description: height width depth(スペース区切り)
          example: 100 50 30
        category:
          type: integer
          description: カテゴリコード, URL(https://github.com/naka-c1024/Hack_U_Team1/blob/main/client/app/lib/constants.dart)
        color:
          type: integer
          description:  色コード, URL(https://github.com/naka-c1024/Hack_U_Team1/blob/main/client/app/lib/constants.dart)
        condition:
          type: integer
          description: 6段階評価
        is_sold:
          type: boolean
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        trade_place:
          type: string
          description: 具体的な取引場所
        is_favorite:
          type: boolean
          description: 「いいねした商品」用
    FurnitureDescribeRequest:
      type: object
      required:
        - image
      properties:
        image:
          type: string
          format: binary
    FurnitureDescribeResponse:
      type: object
      properties:
        product_name:
          type: string
        description:
          type: string
        category:
          type: integer
          description: カテゴリコード(https://github.com/naka-c1024/Pasha-niture/blob/main/client/app/lib/Domain/constants.dart)
        color:
          type: integer
          description: 色コード(https://github.com/naka-c1024/Pasha-niture/blob/main/client/app/lib/Domain/constants.dart)
    FurnitureRecommendRequest:
      type: object
      required:
        - room_photo
        - category
      properties:
        room_photo:
          type: string
          format: binary
        category:
          type: integer
          description: カテゴリコード(https://github.com/naka-c1024/Pasha-niture/blob/main/client/app/lib/Domain/constants.dart)
    RequestTradeRequest:
      type: object
      required:
        - furniture_id
        - user_id
        - trade_date
      properties:
        furniture_id:
          type: integer
        user_id:
          type: integer
        trade_date:
          type: string
          format: date
    TradeResponse:
      type: object
      properties:
        trade_id:
          type: integer
        image:
          type: string
          format: binary
        receiver_name:
          type: string
        product_name:
          type: string
        trade_place:
          type: string
          description: 具体的な取引場所
        furniture_id:
          type: integer
        giver_id:
          type: integer
        receiver_id:
          type: integer
        is_checked:
          type: boolean
        giver_approval:
          type: boolean
        receiver_approval:
          type: boolean
        trade_date:
          type: string
          format: date
    TradeListResponse:
      type: object
      properties:
        trades:
          type: array
          items:
            $ref: '#/components/schemas/TradeResponse'
    UpdateApprovalRequest:
      type: object
      required:
        - is_giver
      properties:
        is_giver:
          type: boolean
    UpdateIsCheckedRequest:
      type: object
      required:
        - is_checked
      properties:
        is_checked:
          type: boolean
    FavoriteResponse:
      type: object
      properties:
        favorites_count:
          type: integer
